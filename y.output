Terminals unused in grammar

   TYPE_SPECIFIER
   COMMA


Grammar

    0 $accept: program $end

    1 program: PROGRAM identifier body END PROGRAM identifier EOL

    2 body: declaration_list statement_list

    3 declaration_list: /* empty */
    4                 | declaration_list declaration

    5 declaration: type_specifier ':' variable_list EOL

    6 type_specifier: INTEGER
    7               | REAL

    8 variable_list: identifier
    9              | variable_list ',' identifier

   10 statement_list: /* empty */
   11               | statement_list statement

   12 statement: assignment_statement
   13          | if_statement
   14          | do_loop_statement
   15          | print_statement

   16 assignment_statement: variable ASSIGN expression EOL

   17 if_statement: IF LPAREN expression RPAREN THEN statement_list END IF EOL

   18 do_loop_statement: DO variable ASSIGN INTEGER_CONSTANT ',' INTEGER_CONSTANT EOL statement_list END DO EOL

   19 print_statement: PRINT DOT ',' expression EOL

   20 expression: term
   21           | expression PLUS term
   22           | expression MINUS term

   23 term: factor
   24     | term MULTIPLY factor
   25     | term DIVIDE factor

   26 factor: variable
   27       | constant
   28       | LPAREN expression RPAREN

   29 variable: identifier

   30 constant: INTEGER_CONSTANT
   31         | REAL_CONSTANT

   32 identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
',' (44) 9 18 19
':' (58) 5
error (256)
PROGRAM (258) 1
END (259) 1 17 18
DO (260) 18
IF (261) 17
THEN (262) 17
PRINT (263) 19
INTEGER (264) 6
REAL (265) 7
IDENTIFIER (266) 32
INTEGER_CONSTANT (267) 18 30
REAL_CONSTANT (268) 31
TYPE_SPECIFIER (269)
ASSIGN (270) 16 18
MULTIPLY (271) 24
DIVIDE (272) 25
PLUS (273) 21
MINUS (274) 22
LPAREN (275) 17 28
RPAREN (276) 17 28
DOT (277) 19
COMMA (278)
EOL (279) 1 5 16 17 18 19


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1, on right: 0
body (29)
    on left: 2, on right: 1
declaration_list (30)
    on left: 3 4, on right: 2 4
declaration (31)
    on left: 5, on right: 4
type_specifier (32)
    on left: 6 7, on right: 5
variable_list (33)
    on left: 8 9, on right: 5 9
statement_list (34)
    on left: 10 11, on right: 2 11 17 18
statement (35)
    on left: 12 13 14 15, on right: 11
assignment_statement (36)
    on left: 16, on right: 12
if_statement (37)
    on left: 17, on right: 13
do_loop_statement (38)
    on left: 18, on right: 14
print_statement (39)
    on left: 19, on right: 15
expression (40)
    on left: 20 21 22, on right: 16 17 19 21 22 28
term (41)
    on left: 23 24 25, on right: 20 21 22 24 25
factor (42)
    on left: 26 27 28, on right: 23 24 25
variable (43)
    on left: 29, on right: 16 18 26
constant (44)
    on left: 30 31, on right: 27
identifier (45)
    on left: 32, on right: 1 8 9 29


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: PROGRAM . identifier body END PROGRAM identifier EOL

    IDENTIFIER  shift, and go to state 3

    identifier  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

   32 identifier: IDENTIFIER .

    $default  reduce using rule 32 (identifier)


state 4

    1 program: PROGRAM identifier . body END PROGRAM identifier EOL

    $default  reduce using rule 3 (declaration_list)

    body              go to state 6
    declaration_list  go to state 7


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: PROGRAM identifier body . END PROGRAM identifier EOL

    END  shift, and go to state 8


state 7

    2 body: declaration_list . statement_list
    4 declaration_list: declaration_list . declaration

    INTEGER  shift, and go to state 9
    REAL     shift, and go to state 10

    $default  reduce using rule 10 (statement_list)

    declaration     go to state 11
    type_specifier  go to state 12
    statement_list  go to state 13


state 8

    1 program: PROGRAM identifier body END . PROGRAM identifier EOL

    PROGRAM  shift, and go to state 14


state 9

    6 type_specifier: INTEGER .

    $default  reduce using rule 6 (type_specifier)


state 10

    7 type_specifier: REAL .

    $default  reduce using rule 7 (type_specifier)


state 11

    4 declaration_list: declaration_list declaration .

    $default  reduce using rule 4 (declaration_list)


state 12

    5 declaration: type_specifier . ':' variable_list EOL

    ':'  shift, and go to state 15


state 13

    2 body: declaration_list statement_list .
   11 statement_list: statement_list . statement

    DO          shift, and go to state 16
    IF          shift, and go to state 17
    PRINT       shift, and go to state 18
    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 2 (body)

    statement             go to state 19
    assignment_statement  go to state 20
    if_statement          go to state 21
    do_loop_statement     go to state 22
    print_statement       go to state 23
    variable              go to state 24
    identifier            go to state 25


state 14

    1 program: PROGRAM identifier body END PROGRAM . identifier EOL

    IDENTIFIER  shift, and go to state 3

    identifier  go to state 26


state 15

    5 declaration: type_specifier ':' . variable_list EOL

    IDENTIFIER  shift, and go to state 3

    variable_list  go to state 27
    identifier     go to state 28


state 16

   18 do_loop_statement: DO . variable ASSIGN INTEGER_CONSTANT ',' INTEGER_CONSTANT EOL statement_list END DO EOL

    IDENTIFIER  shift, and go to state 3

    variable    go to state 29
    identifier  go to state 25


state 17

   17 if_statement: IF . LPAREN expression RPAREN THEN statement_list END IF EOL

    LPAREN  shift, and go to state 30


state 18

   19 print_statement: PRINT . DOT ',' expression EOL

    DOT  shift, and go to state 31


state 19

   11 statement_list: statement_list statement .

    $default  reduce using rule 11 (statement_list)


state 20

   12 statement: assignment_statement .

    $default  reduce using rule 12 (statement)


state 21

   13 statement: if_statement .

    $default  reduce using rule 13 (statement)


state 22

   14 statement: do_loop_statement .

    $default  reduce using rule 14 (statement)


state 23

   15 statement: print_statement .

    $default  reduce using rule 15 (statement)


state 24

   16 assignment_statement: variable . ASSIGN expression EOL

    ASSIGN  shift, and go to state 32


state 25

   29 variable: identifier .

    $default  reduce using rule 29 (variable)


state 26

    1 program: PROGRAM identifier body END PROGRAM identifier . EOL

    EOL  shift, and go to state 33


state 27

    5 declaration: type_specifier ':' variable_list . EOL
    9 variable_list: variable_list . ',' identifier

    EOL  shift, and go to state 34
    ','  shift, and go to state 35


state 28

    8 variable_list: identifier .

    $default  reduce using rule 8 (variable_list)


state 29

   18 do_loop_statement: DO variable . ASSIGN INTEGER_CONSTANT ',' INTEGER_CONSTANT EOL statement_list END DO EOL

    ASSIGN  shift, and go to state 36


state 30

   17 if_statement: IF LPAREN . expression RPAREN THEN statement_list END IF EOL

    IDENTIFIER        shift, and go to state 3
    INTEGER_CONSTANT  shift, and go to state 37
    REAL_CONSTANT     shift, and go to state 38
    LPAREN            shift, and go to state 39

    expression  go to state 40
    term        go to state 41
    factor      go to state 42
    variable    go to state 43
    constant    go to state 44
    identifier  go to state 25


state 31

   19 print_statement: PRINT DOT . ',' expression EOL

    ','  shift, and go to state 45


state 32

   16 assignment_statement: variable ASSIGN . expression EOL

    IDENTIFIER        shift, and go to state 3
    INTEGER_CONSTANT  shift, and go to state 37
    REAL_CONSTANT     shift, and go to state 38
    LPAREN            shift, and go to state 39

    expression  go to state 46
    term        go to state 41
    factor      go to state 42
    variable    go to state 43
    constant    go to state 44
    identifier  go to state 25


state 33

    1 program: PROGRAM identifier body END PROGRAM identifier EOL .

    $default  reduce using rule 1 (program)


state 34

    5 declaration: type_specifier ':' variable_list EOL .

    $default  reduce using rule 5 (declaration)


state 35

    9 variable_list: variable_list ',' . identifier

    IDENTIFIER  shift, and go to state 3

    identifier  go to state 47


state 36

   18 do_loop_statement: DO variable ASSIGN . INTEGER_CONSTANT ',' INTEGER_CONSTANT EOL statement_list END DO EOL

    INTEGER_CONSTANT  shift, and go to state 48


state 37

   30 constant: INTEGER_CONSTANT .

    $default  reduce using rule 30 (constant)


state 38

   31 constant: REAL_CONSTANT .

    $default  reduce using rule 31 (constant)


state 39

   28 factor: LPAREN . expression RPAREN

    IDENTIFIER        shift, and go to state 3
    INTEGER_CONSTANT  shift, and go to state 37
    REAL_CONSTANT     shift, and go to state 38
    LPAREN            shift, and go to state 39

    expression  go to state 49
    term        go to state 41
    factor      go to state 42
    variable    go to state 43
    constant    go to state 44
    identifier  go to state 25


state 40

   17 if_statement: IF LPAREN expression . RPAREN THEN statement_list END IF EOL
   21 expression: expression . PLUS term
   22           | expression . MINUS term

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    RPAREN  shift, and go to state 52


state 41

   20 expression: term .
   24 term: term . MULTIPLY factor
   25     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    $default  reduce using rule 20 (expression)


state 42

   23 term: factor .

    $default  reduce using rule 23 (term)


state 43

   26 factor: variable .

    $default  reduce using rule 26 (factor)


state 44

   27 factor: constant .

    $default  reduce using rule 27 (factor)


state 45

   19 print_statement: PRINT DOT ',' . expression EOL

    IDENTIFIER        shift, and go to state 3
    INTEGER_CONSTANT  shift, and go to state 37
    REAL_CONSTANT     shift, and go to state 38
    LPAREN            shift, and go to state 39

    expression  go to state 55
    term        go to state 41
    factor      go to state 42
    variable    go to state 43
    constant    go to state 44
    identifier  go to state 25


state 46

   16 assignment_statement: variable ASSIGN expression . EOL
   21 expression: expression . PLUS term
   22           | expression . MINUS term

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    EOL    shift, and go to state 56


state 47

    9 variable_list: variable_list ',' identifier .

    $default  reduce using rule 9 (variable_list)


state 48

   18 do_loop_statement: DO variable ASSIGN INTEGER_CONSTANT . ',' INTEGER_CONSTANT EOL statement_list END DO EOL

    ','  shift, and go to state 57


state 49

   21 expression: expression . PLUS term
   22           | expression . MINUS term
   28 factor: LPAREN expression . RPAREN

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    RPAREN  shift, and go to state 58


state 50

   21 expression: expression PLUS . term

    IDENTIFIER        shift, and go to state 3
    INTEGER_CONSTANT  shift, and go to state 37
    REAL_CONSTANT     shift, and go to state 38
    LPAREN            shift, and go to state 39

    term        go to state 59
    factor      go to state 42
    variable    go to state 43
    constant    go to state 44
    identifier  go to state 25


state 51

   22 expression: expression MINUS . term

    IDENTIFIER        shift, and go to state 3
    INTEGER_CONSTANT  shift, and go to state 37
    REAL_CONSTANT     shift, and go to state 38
    LPAREN            shift, and go to state 39

    term        go to state 60
    factor      go to state 42
    variable    go to state 43
    constant    go to state 44
    identifier  go to state 25


state 52

   17 if_statement: IF LPAREN expression RPAREN . THEN statement_list END IF EOL

    THEN  shift, and go to state 61


state 53

   24 term: term MULTIPLY . factor

    IDENTIFIER        shift, and go to state 3
    INTEGER_CONSTANT  shift, and go to state 37
    REAL_CONSTANT     shift, and go to state 38
    LPAREN            shift, and go to state 39

    factor      go to state 62
    variable    go to state 43
    constant    go to state 44
    identifier  go to state 25


state 54

   25 term: term DIVIDE . factor

    IDENTIFIER        shift, and go to state 3
    INTEGER_CONSTANT  shift, and go to state 37
    REAL_CONSTANT     shift, and go to state 38
    LPAREN            shift, and go to state 39

    factor      go to state 63
    variable    go to state 43
    constant    go to state 44
    identifier  go to state 25


state 55

   19 print_statement: PRINT DOT ',' expression . EOL
   21 expression: expression . PLUS term
   22           | expression . MINUS term

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    EOL    shift, and go to state 64


state 56

   16 assignment_statement: variable ASSIGN expression EOL .

    $default  reduce using rule 16 (assignment_statement)


state 57

   18 do_loop_statement: DO variable ASSIGN INTEGER_CONSTANT ',' . INTEGER_CONSTANT EOL statement_list END DO EOL

    INTEGER_CONSTANT  shift, and go to state 65


state 58

   28 factor: LPAREN expression RPAREN .

    $default  reduce using rule 28 (factor)


state 59

   21 expression: expression PLUS term .
   24 term: term . MULTIPLY factor
   25     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    $default  reduce using rule 21 (expression)


state 60

   22 expression: expression MINUS term .
   24 term: term . MULTIPLY factor
   25     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 53
    DIVIDE    shift, and go to state 54

    $default  reduce using rule 22 (expression)


state 61

   17 if_statement: IF LPAREN expression RPAREN THEN . statement_list END IF EOL

    $default  reduce using rule 10 (statement_list)

    statement_list  go to state 66


state 62

   24 term: term MULTIPLY factor .

    $default  reduce using rule 24 (term)


state 63

   25 term: term DIVIDE factor .

    $default  reduce using rule 25 (term)


state 64

   19 print_statement: PRINT DOT ',' expression EOL .

    $default  reduce using rule 19 (print_statement)


state 65

   18 do_loop_statement: DO variable ASSIGN INTEGER_CONSTANT ',' INTEGER_CONSTANT . EOL statement_list END DO EOL

    EOL  shift, and go to state 67


state 66

   11 statement_list: statement_list . statement
   17 if_statement: IF LPAREN expression RPAREN THEN statement_list . END IF EOL

    END         shift, and go to state 68
    DO          shift, and go to state 16
    IF          shift, and go to state 17
    PRINT       shift, and go to state 18
    IDENTIFIER  shift, and go to state 3

    statement             go to state 19
    assignment_statement  go to state 20
    if_statement          go to state 21
    do_loop_statement     go to state 22
    print_statement       go to state 23
    variable              go to state 24
    identifier            go to state 25


state 67

   18 do_loop_statement: DO variable ASSIGN INTEGER_CONSTANT ',' INTEGER_CONSTANT EOL . statement_list END DO EOL

    $default  reduce using rule 10 (statement_list)

    statement_list  go to state 69


state 68

   17 if_statement: IF LPAREN expression RPAREN THEN statement_list END . IF EOL

    IF  shift, and go to state 70


state 69

   11 statement_list: statement_list . statement
   18 do_loop_statement: DO variable ASSIGN INTEGER_CONSTANT ',' INTEGER_CONSTANT EOL statement_list . END DO EOL

    END         shift, and go to state 71
    DO          shift, and go to state 16
    IF          shift, and go to state 17
    PRINT       shift, and go to state 18
    IDENTIFIER  shift, and go to state 3

    statement             go to state 19
    assignment_statement  go to state 20
    if_statement          go to state 21
    do_loop_statement     go to state 22
    print_statement       go to state 23
    variable              go to state 24
    identifier            go to state 25


state 70

   17 if_statement: IF LPAREN expression RPAREN THEN statement_list END IF . EOL

    EOL  shift, and go to state 72


state 71

   18 do_loop_statement: DO variable ASSIGN INTEGER_CONSTANT ',' INTEGER_CONSTANT EOL statement_list END . DO EOL

    DO  shift, and go to state 73


state 72

   17 if_statement: IF LPAREN expression RPAREN THEN statement_list END IF EOL .

    $default  reduce using rule 17 (if_statement)


state 73

   18 do_loop_statement: DO variable ASSIGN INTEGER_CONSTANT ',' INTEGER_CONSTANT EOL statement_list END DO . EOL

    EOL  shift, and go to state 74


state 74

   18 do_loop_statement: DO variable ASSIGN INTEGER_CONSTANT ',' INTEGER_CONSTANT EOL statement_list END DO EOL .

    $default  reduce using rule 18 (do_loop_statement)
